import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
from matplotlib.offsetbox import AnnotationBbox, TextArea


fig, ax = plt.subplots(figsize=(14, 16))
ax.set_xlim(0, 12)
ax.set_ylim(-12, 18)
ax.axis('off')


boxes = {
    "start": (5, 15, "Start"),
    "load_data": (5, 13, "Load Dataset"),
    "data_preprocessing": (5, 11, "Exploratory Data Analysis (EDA)"),
    "feature_selection": (5, 9, "Preprocessing Data"),
    "data_splitting": (5, 7, "Split Data untuk Training dan Testing"),
    "model_selection": (5, 5, "Training Model KNN"),
    "model_training": (5, 3, "Training Model SVM"),
    "grid_search": (5, 1, "Evaluasi Model KNN"),
    "final_evaluation": (5, -1, "Evaluasi Model SVM"),
    "perbandingan_hasil": (5, -3, "Perbandingan Hasil"),
    "kesimpulan" : (5, -6, "Kesimpulan"),
    "end": (5, -9, "End")
}

for key, (x, y, text) in boxes.items():
    ax.add_patch(mpatches.FancyBboxPatch((x-1, y-0.5), 2, 1, boxstyle="round,pad=0.3", edgecolor="black", facecolor="lightgrey"))
    ab = AnnotationBbox(TextArea(text, textprops=dict(ha='center', va='center', fontsize=12)), (x, y), frameon=False)
    ax.add_artist(ab)


arrows = [
    ("start", "load_data"),
    ("load_data", "data_preprocessing"),
    ("data_preprocessing", "feature_selection"),
    ("feature_selection", "data_splitting"),
    ("data_splitting", "model_selection"),
    ("model_selection", "model_training"),
    ("model_training", "grid_search"),
    ("grid_search", "final_evaluation"),
    ("final_evaluation", "perbandingan_hasil"),
    ("perbandingan_hasil", "kesimpulan"),
    ("kesimpulan", "end")
]

for (start, end) in arrows:
    x1, y1 = boxes[start][:2]
    x2, y2 = boxes[end][:2]
    ax.annotate("", xy=(x2, y2+0.5), xytext=(x1, y1-0.5), arrowprops=dict(arrowstyle="->"))

plt.show()
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
